syntax = "proto3";

import "Common/GenericResult.proto";
import "Enums/AgentLifetimeState.proto";
import "Messages/AgentDto.proto";

import "google/api/annotations.proto";

package gaapicommon.services.agents;
option csharp_namespace = "GAAPICommon.Services.Agents";

// Agent Service for managing agents.
service AgentServiceProto {

	// Get all agents.
	rpc GetAllAgentData (GetAllAgentDataRequest) returns (GetAllAgentDataResult) {
		option (google.api.http) = {
            get: "/Agent/GetAllAgentData"
        };
	}

	// Get all agents in lifetime state.
	rpc GetAllAgentsInLifetimeState (GetAllAgentsInLifetimeStateRequest) returns (GetAllAgentsInLifetimeStateResult) {
		option (google.api.http) = {
            get: "/Agent/GetAllAgentsInLifetimeState"
        };
	}

	// Set an agents lifetime state.
	rpc SetAgentLifetimeState (SetAgentLifetimeStateRequest) returns (GenericResult) {
		option (google.api.http) = {
            post: "/Agent/SetAgentLifetimeState"
        };
	}

	// Get an agent.
	rpc GetAgentData (GetAgentDataRequest) returns (GetAgentDataResult) {
		option (google.api.http) = {
            get: "/Agent/GetAgentData"
        };
	}

	// Subscribe to receive agent state updates.
    rpc Subscribe(SubscribeRequest) returns (stream AgentSubscribeResult) {
		option (google.api.http) = {
			get : "/Agent/Subscribe"
		};
	}
}

// Message Parameters

message GetAllAgentDataRequest { }

message GetAllAgentsInLifetimeStateRequest {
	gaapicommon.enums.AgentLifetimeState AgentLifetimeState = 1;
}

message SetAgentLifetimeStateRequest {
	int32 AgentId = 1;
	gaapicommon.enums.AgentLifetimeState AgentLifetimeState = 2;
}

message GetAgentDataRequest { }

message SubscribeRequest {}

// Message Returns

message GetAllAgentDataResult {
	string ExceptionMessage = 1;
	string ExceptionSource = 2;
	string ExceptionStackTrace = 3;
	repeated gaapicommon.messages.AgentDto Agents = 4;
	int32 ServiceCode = 5;
}

message GetAllAgentsInLifetimeStateResult {
	string ExceptionMessage = 1;
	string ExceptionSource = 2;
	string ExceptionStackTrace = 3;
	repeated gaapicommon.messages.AgentDto Agents = 4;
	int32 ServiceCode = 5;
}

message GetAgentDataResult {
	string ExceptionMessage = 1;
	string ExceptionSource = 2;
	string ExceptionStackTrace = 3;
	gaapicommon.messages.AgentDto Agent = 4;
	int32 ServiceCode = 5;
}

message AgentSubscribeResult {
	repeated gaapicommon.messages.AgentDto Agents = 1;
}